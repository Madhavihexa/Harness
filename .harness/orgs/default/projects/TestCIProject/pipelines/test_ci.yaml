pipeline:
  name: test_ci
  identifier: test_ci
  projectIdentifier: TestCIProject
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.githubconnector
        repoName: Harness
        build: <+input>
  variables:
    - name: targetEnv
      type: String
      default: dev
      value: <+input>
    - name: runSecurityScan
      type: String
      default: "false"
      value: <+input>
    - name: buildNumber
      type: Number
      default: 1
      value: <+input>
    - name: retryCount
      type: Number
      default: 0
      value: <+input>
  stages:
    - stage:
        name: Build Stage
        identifier: build
        type: CI
        when:
          pipelineStatus: Success
          condition: <+pipeline.variables.targetEnv> == "dev" || <+pipeline.variables.targetEnv> == "qa"
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            override: true
            paths: []
          buildIntelligence:
            enabled: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Install Dependencies
                  identifier: npm_install
                  when:
                    stageStatus: Success
                  spec:
                    command: npm install
              - step:
                  type: Run
                  name: Build Application
                  identifier: npm_build
                  when:
                    stageStatus: Success
                  spec:
                    command: npm run build
              - step:
                  type: Run
                  name: Run Tests
                  identifier: npm_test
                  when:
                    stageStatus: Success
                  spec:
                    command: npm test
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push Image
                  identifier: BuildAndPushDockerRegistry_1
                  when:
                    stageStatus: Success
                  spec:
                    connectorRef: account.dockerconnector
                    repo: harnessdocker/harnessapp
                    tags:
                      - <+pipeline.variables.imageTag>
              - step:
                  type: Run
                  name: Run Dev-Specific Step
                  identifier: DevStep
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.targetEnv> == "dev"
                  spec:
                    command: echo "Running dev-specific logic..."
              - step:
                  type: Run
                  name: Run QA-Specific Step
                  identifier: QAStep
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.targetEnv> == "qa"
                  spec:
                    command: echo "Running QA-specific logic..."
              - step:
                  type: Run
                  name: Security Scan
                  identifier: SecurityScan
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.runSecurityScan> == "true"
                  spec:
                    command: echo "Running security scan..."
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: MarkAsFailure
        variables:
          - name: imageTag
            type: String
            description: ""
            required: false
            value: "<+pipeline.variables.targetEnv == \"dev\" ? \"devlatest\" : \"qalatest\">"
