pipeline:
  name: test_ci
  identifier: test_ci
  projectIdentifier: TestCIProject
  orgIdentifier: default
  properties:
    ci:
      codebase:
        connectorRef: account.githubconnector
        repoName: Harness
        build: <+input>
  variables:
    - name: targetEnv
      type: String
      default: dev
      value: <+input>
    - name: runSecurityScan
      type: String
      default: "false"
      value: <+input>
    - name: buildNumber
      type: Number
      default: 1
      value: <+input>
  stages:
    - stage:
        name: Build Stage
        identifier: build
        type: CI
        when:
          pipelineStatus: Success
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            override: true
            paths: []
          buildIntelligence:
            enabled: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Debug Variables
                  identifier: debug_vars
                  when:
                    stageStatus: Success
                  spec:
                    command: |
                      echo "Target Env: <+pipeline.variables.targetEnv>"
              - step:
                  type: Run
                  name: Install Dependencies
                  identifier: npm_install
                  when:
                    stageStatus: Success
                  spec:
                    command: npm install
              - step:
                  type: Run
                  name: Build Application
                  identifier: npm_build
                  when:
                    stageStatus: Success
                  spec:
                    command: npm run build
              - step:
                  type: Run
                  name: Run Tests
                  identifier: npm_test
                  when:
                    stageStatus: Success
                  spec:
                    command: npm test
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build Dev Image
                  identifier: BuildDevImage
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.targetEnv> == "dev"
                  spec:
                    connectorRef: account.dockerconnector
                    repo: harnessdocker/harnessapp
                    tags:
                      - devlatest
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build QA Image
                  identifier: BuildQAImage
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.targetEnv> == "qa"
                  spec:
                    connectorRef: account.dockerconnector
                    repo: harnessdocker/harnessapp
                    tags:
                      - qalatest
              - step:
                  type: Run
                  name: Security Scan
                  identifier: SecurityScan
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.runSecurityScan> == "true"
                  spec:
                    command: echo "Running security scan..."
    - stage:
        name: Approval Stage
        identifier: approval
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: Manual Approval
                  identifier: approval_step
                  type: HarnessApproval
                  timeout: 1d
                  spec:
                    approvalMessage: Please review the build and approve to proceed.
                    includePipelineExecutionHistory: true
                    approvers:
                      minimumCount: 1
                      disallowPipelineExecutor: false
                      userGroups:
                        - account._account_all_users
                    isAutoRejectEnabled: false
                    approverInputs: []
    - stage:
        name: cdpipelinetrigger
        identifier: cdpipelinetrigger
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: Http
                  name: Cdtrigger
                  identifier: Cdtrigger
                  spec:
                    url: https://app.harness.io/gateway/pipeline/api/webhook/custom/-VjJuosJRk2u7nwHJbtMSQ/v3?accountIdentifier=HD-tYLz5Ruq9JxhQNEucpQ&orgIdentifier=default&projectIdentifier=Testcdproject&pipelineIdentifier=cd_automation&triggerIdentifier=webhooktriggertesting
                    method: POST
                    headers: []
                    inputVariables: []
                    outputVariables: []
                    delegateSelectors:
                      - helm-delegate
                  timeout: 10s
        tags: {}
