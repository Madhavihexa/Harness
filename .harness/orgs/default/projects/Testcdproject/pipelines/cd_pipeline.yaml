pipeline:
  name: permissionmanagement_service_deploy
  identifier: permissionmanagement_service_deploy
  projectIdentifier: Testcdproject
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: permissionmanagement_service
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  manifests:
                    - manifest:
                        identifier: permissionmanagementservicehelm
                        type: HelmChart
                        spec:
                          store:
                            type: Github
                            spec:
                              branch: <+input>
          environment:
            environmentRef: <+input>
            deployToAll: false
            environmentInputs: <+input>
            serviceOverrideInputs: <+input>
            infrastructureDefinitions: <+input>
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        variables:
          - name: sqlDbPass
            type: String
            description: ""
            required: false
            value: <+secrets.getValue("sqlDbServiceAccountPassword")>
  properties:
    ci:
      codebase:
        connectorRef: org.ghe_org_aurora
        repoName: permission-management-service
        build: <+input>
        sparseCheckout: []
  variables:
    - name: buildtag
      type: String
      description: The container image tag to deploy
      required: true
      value: <+input>
